{"ts":1340859294868,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"var express = require('express'), \n    Db = require('mongodb').Db, \n    Server = require('mongodb').Server;\n\nconsole.log(\"starting application \");\n\nvar db = new Db('cloud', new Server('flame.mongohq.com', 27106, {}), {auto_reconnect: true});\n\nvar app = module.exports = express.createServer();\n\n// Configuration\napp.configure(function(){\n   app.set('views', __dirname + '/views'); \n   app.set('view engine', 'ejs');\n   app.register(\".html\", require(\"ejs\")); // Register EJS to process the server html\n   app.set('view options', {\n        open: '{{',\n        close: '}}'\n    }); // Change the open and close tags, no real reason\n   app.use(express.bodyParser());\n   app.use(express.methodOverride());\n   app.use(express.cookieParser());\n   app.use(express.session({ secret: 'CrezwellInVegas2021' }));\n   //app.use(everyauth.middleware());\n   app.use(app.router);\n   app.use(express.static(__dirname + '/public'));\n});\n\napp.configure('development', function(){\n   app.use(express.errorHandler({ dumpExceptions: true, showStack: true })); \n   console.log(\"Running in development\");\n});\n\napp.configure('production', function(){\n   app.use(express.errorHandler()); \n});\n\n// Routes\napp.get('/', function(req, res){\n    res.render('index.html',{\n        layout: 'layout.html',\n        page: 'home'\n    });\n});\n\napp.get('/vegasreunion', function(req, res){\n    res.render('vegasreunion.html', {\n        layout: 'layout.html',\n        page: 'vegasreunion'\n    });\n});\n\napp.get('/app', function(req, res){\n    res.render('app.html', {\n        layout: 'layout.html',\n        page: 'app'\n    });\n});\n\napp.get('/wall', function(req, res){\n    res.render('wall.html', {\n        layout: 'layout.html',\n        page: 'wall'\n    });\n});\n\napp.get('/notes', function(req, res){\n    db.collection('jays', function(err, c) {\n        c.find({}).toArray(function(err, items) {\n            res.render('notes.html', {\n                layout: 'layout.html',\n                page: 'notes',\n                'items': items\n            });\n        });\n    });\n});\n\napp.get('/api/notes', function(req, res){\n    db.collection('jays', function(err, collection) {\n        collection.find({}).toArray(function(err, items) {\n            if(err) {\n                res.send({status: \"error\", message: err, data: '' });\n            } else {\n                res.send({status: \"success\", message: \"\", data: items });\n            }\n        }); \n    });\n});\n\napp.get('/api/notes/:id', function(req, res){\n    db.collection('jays', function(err, c) {\n        c.findOne({\"_id\":req.params.id}, \n            function(err, item) {\n                console.log(err);\n                if(err) {\n                    res.send({status: \"error\", message: err, data: '' });\n                } else {\n                    res.send({status: \"success\", message: req.params.id, data: item });\n                }\n            }\n        );\n    });\n});\n\napp.get('/maps', function(req, res){\n    res.render('maps.html', {\n        layout: 'layout.html',\n        page: 'maps'\n    });\n});\n\napp.get('/api/wall', function(req, res){\n    res.send({\n                status: 'success',\n                message: 'get not implemented',\n                data: 'all'\n            });\n});\n\napp.get('/api/wall/:id', function(req, res){\n    res.send(\n            {\n                status: \"success\",\n                message: 'get not implemented',\n                data: 'get(' + req.params.id + ')'\n            }\n        );\n});\n\napp.put('/api/wall/:id', function(req, res){\n    var wallPost = {title: req.body.title , body: req.body.title.body};\n    res.send(\n            {\n                status: \"success\",\n                message: 'put not implemented',\n                data: 'put(' + wallPost.title + ')'\n            }\n        );\n});\n\napp.post('/api/wall', function(req, res){\n    var wallPost = {title: req.body.title , body: req.body.title.body};\n    res.send(\n            {\n                status: \"success\",\n                message: 'post not implemented',\n                data: 'post(' + wallPost.title + ')'\n            }\n        );\n});\n\napp.delete('/api/wall/:id', function(req, res){\n    res.send(\n            {\n                status: \"success\",\n                message: 'delete not implemented',\n                data: 'delete(' + req.params.id + ')'\n            }\n        );\n});\n\napp.get('/api/level1', function(req, res){\n    res.send(\n            {\n                status: \"success\",\n                message: '',\n                data: [{id: '1', name: 'Level 1 (a)'},\n                    {id: '2', name: 'Level 1 (b)'},\n                    {id: '3', name: 'Level 1 (c)'}]\n            }\n        );\n});\n\napp.get('/api/level2/:level1', function(req, res){\n    res.send(\n            {\n                status: \"success\",\n                message: '',\n                data: [{id: '1', name: 'Level ' + req.params.level1 + ' (a)'},\n                    {id: '2', name: 'Level ' + req.params.level1 + ' (b)'},\n                    {id: '3', name: 'Level ' + req.params.level1 + ' (c)'}]\n            }\n        );\n});\n\napp.get('/api/level3/:level1/:level2', function(req, res){\n    res.send(\n            {\n                status: \"success\",\n                message: '',\n                data: [{id: '1', name: 'Level ' + req.params.level1 + '.' + req.params.level2 + ' (a)'},\n                    {id: '2', name: 'Level ' + req.params.level1 + '.' + req.params.level2 + ' (b)'},\n                    {id: '3', name: 'Level ' + req.params.level1 + '.' + req.params.level2 + ' (c)'}]\n            }\n        );\n}); \n \napp.get('/api/level4/:level2', function(req, res){\n    res.send(\n            {\n                status: \"success\",\n                message: '',\n                data: [{id: '1', name: 'Level ' + req.params.level2 + ' (a)'},\n                    {id: '2', name: 'Level ' + req.params.level2 + ' (b)'},\n                    {id: '3', name: 'Level ' + req.params.level2 + ' (c)'}]\n            }\n        );\n});\n\n//app.listen(process.env.C9_PORT, \"0.0.0.0\");\nvar port = process.env.PORT || 3000;\n\ndb.open(function(err) {\n    console.log('authenticating');\n    db.authenticate(\n        'test', \n        'test123', \n        function(err) {\n            if (err) {\n               console.log(err);\n            } else {\n                console.log('connected to mongoDb - cloud');\n                app.listen(port, function() {\n                    console.log(\"Listening on \" + port);\n                });\n            }\n        }\n    );\n});\n"]],"start1":0,"start2":0,"length1":0,"length2":6454}]],"length":6454}
{"contributors":[],"silentsave":false,"ts":1341528926015,"patch":[[{"diffs":[[1,"var express = require('express'), \n    Db = require('mongodb').Db, \n    Server = require('mongodb').Server;\n\nconsole.log(\"starting application \");\n\nvar db = new Db('cloud', new Server('flame.mongohq.com', 27106, {}), {auto_reconnect: true});\n\nvar app = module.exports = express.createServer();\n\n// Configuration\napp.configure(function(){\n   app.set('views', __dirname + '/views'); \n   app.set('view engine', 'ejs');\n   app.register(\".html\", require(\"ejs\")); // Register EJS to process the server html\n   app.set('view options', {\n        open: '{{',\n        close: '}}'\n    }); // Change the open and close tags, no real reason\n   app.use(express.bodyParser());\n   app.use(express.methodOverride());\n   app.use(express.cookieParser());\n   app.use(express.session({ secret: 'CrezwellInVegas2021' }));\n   //app.use(everyauth.middleware());\n   app.use(app.router);\n   app.use(express.static(__dirname + '/public'));\n});\n\napp.configure('development', function(){\n   app.use(express.errorHandler({ dumpExceptions: true, showStack: true })); \n   console.log(\"Running in development\");\n});\n\napp.configure('production', function(){\n   app.use(express.errorHandler()); \n});\n\n// Routes\napp.get('/', function(req, res){\n    res.render('index.html',{\n        layout: 'layout.html',\n        page: 'home'\n    });\n});\n\napp.get('/vegasreunion', function(req, res){\n    res.render('vegasreunion.html', {\n        layout: 'layout-clean.html',\n        page: 'vegasreunion'\n    });\n});\n\napp.get('/app', function(req, res){\n    res.render('app.html', {\n        layout: 'layout.html',\n        page: 'app'\n    });\n});\n\napp.get('/wall', function(req, res){\n    res.render('wall.html', {\n        layout: 'layout.html',\n        page: 'wall'\n    });\n});\n\napp.get('/notes', function(req, res){\n    db.collection('jays', function(err, c) {\n        c.find({}).toArray(function(err, items) {\n            res.render('notes.html', {\n                layout: 'layout.html',\n                page: 'notes',\n                'items': items\n            });\n        });\n    });\n});\n\napp.get('/api/notes', function(req, res){\n    db.collection('jays', function(err, collection) {\n        collection.find({}).toArray(function(err, items) {\n            if(err) {\n                res.send({status: \"error\", message: err, data: '' });\n            } else {\n                res.send({status: \"success\", message: \"\", data: items });\n            }\n        }); \n    });\n});\n\napp.get('/api/notes/:id', function(req, res){\n    db.collection('jays', function(err, c) {\n        c.findOne({\"_id\":req.params.id}, \n            function(err, item) {\n                console.log(err);\n                if(err) {\n                    res.send({status: \"error\", message: err, data: '' });\n                } else {\n                    res.send({status: \"success\", message: req.params.id, data: item });\n                }\n            }\n        );\n    });\n});\n\napp.get('/maps', function(req, res){\n    res.render('maps.html', {\n        layout: 'layout.html',\n        page: 'maps'\n    });\n});\n\napp.get('/api/wall', function(req, res){\n    res.send({\n                status: 'success',\n                message: 'get not implemented',\n                data: 'all'\n            });\n});\n\napp.get('/api/wall/:id', function(req, res){\n    res.send(\n            {\n                status: \"success\",\n                message: 'get not implemented',\n                data: 'get(' + req.params.id + ')'\n            }\n        );\n});\n\napp.put('/api/wall/:id', function(req, res){\n    var wallPost = {title: req.body.title , body: req.body.title.body};\n    res.send(\n            {\n                status: \"success\",\n                message: 'put not implemented',\n                data: 'put(' + wallPost.title + ')'\n            }\n        );\n});\n\napp.post('/api/wall', function(req, res){\n    var wallPost = {title: req.body.title , body: req.body.title.body};\n    res.send(\n            {\n                status: \"success\",\n                message: 'post not implemented',\n                data: 'post(' + wallPost.title + ')'\n            }\n        );\n});\n\napp.delete('/api/wall/:id', function(req, res){\n    res.send(\n            {\n                status: \"success\",\n                message: 'delete not implemented',\n                data: 'delete(' + req.params.id + ')'\n            }\n        );\n});\n\napp.get('/api/level1', function(req, res){\n    res.send(\n            {\n                status: \"success\",\n                message: '',\n                data: [{id: '1', name: 'Level 1 (a)'},\n                    {id: '2', name: 'Level 1 (b)'},\n                    {id: '3', name: 'Level 1 (c)'}]\n            }\n        );\n});\n\napp.get('/api/level2/:level1', function(req, res){\n    res.send(\n            {\n                status: \"success\",\n                message: '',\n                data: [{id: '1', name: 'Level ' + req.params.level1 + ' (a)'},\n                    {id: '2', name: 'Level ' + req.params.level1 + ' (b)'},\n                    {id: '3', name: 'Level ' + req.params.level1 + ' (c)'}]\n            }\n        );\n});\n\napp.get('/api/level3/:level1/:level2', function(req, res){\n    res.send(\n            {\n                status: \"success\",\n                message: '',\n                data: [{id: '1', name: 'Level ' + req.params.level1 + '.' + req.params.level2 + ' (a)'},\n                    {id: '2', name: 'Level ' + req.params.level1 + '.' + req.params.level2 + ' (b)'},\n                    {id: '3', name: 'Level ' + req.params.level1 + '.' + req.params.level2 + ' (c)'}]\n            }\n        );\n}); \n \napp.get('/api/level4/:level2', function(req, res){\n    res.send(\n            {\n                status: \"success\",\n                message: '',\n                data: [{id: '1', name: 'Level ' + req.params.level2 + ' (a)'},\n                    {id: '2', name: 'Level ' + req.params.level2 + ' (b)'},\n                    {id: '3', name: 'Level ' + req.params.level2 + ' (c)'}]\n            }\n        );\n});\n\n//app.listen(process.env.C9_PORT, \"0.0.0.0\");\nvar port = process.env.PORT || 3000;\n\ndb.open(function(err) {\n    console.log('authenticating');\n    db.authenticate(\n        'test', \n        'test123', \n        function(err) {\n            if (err) {\n               console.log(err);\n            } else {\n                console.log('connected to mongoDb - cloud');\n                app.listen(port, function() {\n                    console.log(\"Listening on \" + port);\n                });\n            }\n        }\n    );\n});\n"]],"start1":0,"start2":0,"length1":0,"length2":6460}]],"length":6460,"saved":false}
{"contributors":[],"silentsave":false,"ts":1343803413329,"patch":[[{"diffs":[[0,"});\n"],[-1,"var express = require('express'), \n    Db = require('mongodb').Db, \n    Server = require('mongodb').Server;\n\nconsole.log(\"starting application \");\n\nvar db = new Db('cloud', new Server('flame.mongohq.com', 27106, {}), {auto_reconnect: true});\n\nvar app = module.exports = express.createServer();\n\n// Configuration\napp.configure(function(){\n   app.set('views', __dirname + '/views'); \n   app.set('view engine', 'ejs');\n   app.register(\".html\", require(\"ejs\")); // Register EJS to process the server html\n   app.set('view options', {\n        open: '{{',\n        close: '}}'\n    }); // Change the open and close tags, no real reason\n   app.use(express.bodyParser());\n   app.use(express.methodOverride());\n   app.use(express.cookieParser());\n   app.use(express.session({ secret: 'CrezwellInVegas2021' }));\n   //app.use(everyauth.middleware());\n   app.use(app.router);\n   app.use(express.static(__dirname + '/public'));\n});\n\napp.configure('development', function(){\n   app.use(express.errorHandler({ dumpExceptions: true, showStack: true })); \n   console.log(\"Running in development\");\n});\n\napp.configure('production', function(){\n   app.use(express.errorHandler()); \n});\n\n// Routes\napp.get('/', function(req, res){\n    res.render('index.html',{\n        layout: 'layout.html',\n        page: 'home'\n    });\n});\n\napp.get('/vegasreunion', function(req, res){\n    res.render('vegasreunion.html', {\n        layout: 'layout.html',\n        page: 'vegasreunion'\n    });\n});\n\napp.get('/app', function(req, res){\n    res.render('app.html', {\n        layout: 'layout.html',\n        page: 'app'\n    });\n});\n\napp.get('/wall', function(req, res){\n    res.render('wall.html', {\n        layout: 'layout.html',\n        page: 'wall'\n    });\n});\n\napp.get('/notes', function(req, res){\n    db.collection('jays', function(err, c) {\n        c.find({}).toArray(function(err, items) {\n            res.render('notes.html', {\n                layout: 'layout.html',\n                page: 'notes',\n                'items': items\n            });\n        });\n    });\n});\n\napp.get('/api/notes', function(req, res){\n    db.collection('jays', function(err, collection) {\n        collection.find({}).toArray(function(err, items) {\n            if(err) {\n                res.send({status: \"error\", message: err, data: '' });\n            } else {\n                res.send({status: \"success\", message: \"\", data: items });\n            }\n        }); \n    });\n});\n\napp.get('/api/notes/:id', function(req, res){\n    db.collection('jays', function(err, c) {\n        c.findOne({\"_id\":req.params.id}, \n            function(err, item) {\n                console.log(err);\n                if(err) {\n                    res.send({status: \"error\", message: err, data: '' });\n                } else {\n                    res.send({status: \"success\", message: req.params.id, data: item });\n                }\n            }\n        );\n    });\n});\n\napp.get('/maps', function(req, res){\n    res.render('maps.html', {\n        layout: 'layout.html',\n        page: 'maps'\n    });\n});\n\napp.get('/api/wall', function(req, res){\n    res.send({\n                status: 'success',\n                message: 'get not implemented',\n                data: 'all'\n            });\n});\n\napp.get('/api/wall/:id', function(req, res){\n    res.send(\n            {\n                status: \"success\",\n                message: 'get not implemented',\n                data: 'get(' + req.params.id + ')'\n            }\n        );\n});\n\napp.put('/api/wall/:id', function(req, res){\n    var wallPost = {title: req.body.title , body: req.body.title.body};\n    res.send(\n            {\n                status: \"success\",\n                message: 'put not implemented',\n                data: 'put(' + wallPost.title + ')'\n            }\n        );\n});\n\napp.post('/api/wall', function(req, res){\n    var wallPost = {title: req.body.title , body: req.body.title.body};\n    res.send(\n            {\n                status: \"success\",\n                message: 'post not implemented',\n                data: 'post(' + wallPost.title + ')'\n            }\n        );\n});\n\napp.delete('/api/wall/:id', function(req, res){\n    res.send(\n            {\n                status: \"success\",\n                message: 'delete not implemented',\n                data: 'delete(' + req.params.id + ')'\n            }\n        );\n});\n\napp.get('/api/level1', function(req, res){\n    res.send(\n            {\n                status: \"success\",\n                message: '',\n                data: [{id: '1', name: 'Level 1 (a)'},\n                    {id: '2', name: 'Level 1 (b)'},\n                    {id: '3', name: 'Level 1 (c)'}]\n            }\n        );\n});\n\napp.get('/api/level2/:level1', function(req, res){\n    res.send(\n            {\n                status: \"success\",\n                message: '',\n                data: [{id: '1', name: 'Level ' + req.params.level1 + ' (a)'},\n                    {id: '2', name: 'Level ' + req.params.level1 + ' (b)'},\n                    {id: '3', name: 'Level ' + req.params.level1 + ' (c)'}]\n            }\n        );\n});\n\napp.get('/api/level3/:level1/:level2', function(req, res){\n    res.send(\n            {\n                status: \"success\",\n                message: '',\n                data: [{id: '1', name: 'Level ' + req.params.level1 + '.' + req.params.level2 + ' (a)'},\n                    {id: '2', name: 'Level ' + req.params.level1 + '.' + req.params.level2 + ' (b)'},\n                    {id: '3', name: 'Level ' + req.params.level1 + '.' + req.params.level2 + ' (c)'}]\n            }\n        );\n}); \n \napp.get('/api/level4/:level2', function(req, res){\n    res.send(\n            {\n                status: \"success\",\n                message: '',\n                data: [{id: '1', name: 'Level ' + req.params.level2 + ' (a)'},\n                    {id: '2', name: 'Level ' + req.params.level2 + ' (b)'},\n                    {id: '3', name: 'Level ' + req.params.level2 + ' (c)'}]\n            }\n        );\n});\n\n//app.listen(process.env.C9_PORT, \"0.0.0.0\");\nvar port = process.env.PORT || 3000;\n\ndb.open(function(err) {\n    console.log('authenticating');\n    db.authenticate(\n        'test', \n        'test123', \n        function(err) {\n            if (err) {\n               console.log(err);\n            } else {\n                console.log('connected to mongoDb - cloud');\n                app.listen(port, function() {\n                    console.log(\"Listening on \" + port);\n                });\n            }\n        }\n    );\n});\n"]],"start1":6456,"start2":6456,"length1":6458,"length2":4}]],"length":6460,"saved":false}
